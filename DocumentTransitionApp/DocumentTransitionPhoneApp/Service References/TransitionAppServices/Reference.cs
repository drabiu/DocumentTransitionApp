//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DocumentTransitionPhoneApp.TransitionAppServices {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonFiles", Namespace="http://tempuri.org/")]
    public partial class PersonFiles : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PersonField;
        
        private DocumentTransitionPhoneApp.TransitionAppServices.ArrayOfBase64Binary FilesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public DocumentTransitionPhoneApp.TransitionAppServices.ArrayOfBase64Binary Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfBase64Binary", Namespace="http://tempuri.org/", ItemName="base64Binary")]
    public class ArrayOfBase64Binary : System.Collections.ObjectModel.ObservableCollection<byte[]> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransitionAppServices.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SplitDocument", ReplyAction="*")]
        System.IAsyncResult BeginSplitDocument(DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequest request, System.AsyncCallback callback, object asyncState);
        
        DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponse EndSplitDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MergeDocument", ReplyAction="*")]
        System.IAsyncResult BeginMergeDocument(DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequest request, System.AsyncCallback callback, object asyncState);
        
        DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponse EndMergeDocument(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SplitDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SplitDocument", Namespace="http://tempuri.org/", Order=0)]
        public DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequestBody Body;
        
        public SplitDocumentRequest() {
        }
        
        public SplitDocumentRequest(DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SplitDocumentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string docName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public byte[] docxFile;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] xmlFile;
        
        public SplitDocumentRequestBody() {
        }
        
        public SplitDocumentRequestBody(string docName, byte[] docxFile, byte[] xmlFile) {
            this.docName = docName;
            this.docxFile = docxFile;
            this.xmlFile = xmlFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SplitDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SplitDocumentResponse", Namespace="http://tempuri.org/", Order=0)]
        public DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponseBody Body;
        
        public SplitDocumentResponse() {
        }
        
        public SplitDocumentResponse(DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SplitDocumentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> SplitDocumentResult;
        
        public SplitDocumentResponseBody() {
        }
        
        public SplitDocumentResponseBody(System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> SplitDocumentResult) {
            this.SplitDocumentResult = SplitDocumentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MergeDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MergeDocument", Namespace="http://tempuri.org/", Order=0)]
        public DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequestBody Body;
        
        public MergeDocumentRequest() {
        }
        
        public MergeDocumentRequest(DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class MergeDocumentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string docName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> files;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] xmlFile;
        
        public MergeDocumentRequestBody() {
        }
        
        public MergeDocumentRequestBody(string docName, System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> files, byte[] xmlFile) {
            this.docName = docName;
            this.files = files;
            this.xmlFile = xmlFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MergeDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MergeDocumentResponse", Namespace="http://tempuri.org/", Order=0)]
        public DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponseBody Body;
        
        public MergeDocumentResponse() {
        }
        
        public MergeDocumentResponse(DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class MergeDocumentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] MergeDocumentResult;
        
        public MergeDocumentResponseBody() {
        }
        
        public MergeDocumentResponseBody(byte[] MergeDocumentResult) {
            this.MergeDocumentResult = MergeDocumentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SplitDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SplitDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MergeDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MergeDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap>, DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap {
        
        private BeginOperationDelegate onBeginSplitDocumentDelegate;
        
        private EndOperationDelegate onEndSplitDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onSplitDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginMergeDocumentDelegate;
        
        private EndOperationDelegate onEndMergeDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onMergeDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SplitDocumentCompletedEventArgs> SplitDocumentCompleted;
        
        public event System.EventHandler<MergeDocumentCompletedEventArgs> MergeDocumentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap.BeginSplitDocument(DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSplitDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSplitDocument(string docName, byte[] docxFile, byte[] xmlFile, System.AsyncCallback callback, object asyncState) {
            DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequest inValue = new DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequest();
            inValue.Body = new DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequestBody();
            inValue.Body.docName = docName;
            inValue.Body.docxFile = docxFile;
            inValue.Body.xmlFile = xmlFile;
            return ((DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap)(this)).BeginSplitDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponse DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap.EndSplitDocument(System.IAsyncResult result) {
            return base.Channel.EndSplitDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> EndSplitDocument(System.IAsyncResult result) {
            DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponse retVal = ((DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap)(this)).EndSplitDocument(result);
            return retVal.Body.SplitDocumentResult;
        }
        
        private System.IAsyncResult OnBeginSplitDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string docName = ((string)(inValues[0]));
            byte[] docxFile = ((byte[])(inValues[1]));
            byte[] xmlFile = ((byte[])(inValues[2]));
            return this.BeginSplitDocument(docName, docxFile, xmlFile, callback, asyncState);
        }
        
        private object[] OnEndSplitDocument(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> retVal = this.EndSplitDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSplitDocumentCompleted(object state) {
            if ((this.SplitDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SplitDocumentCompleted(this, new SplitDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SplitDocumentAsync(string docName, byte[] docxFile, byte[] xmlFile) {
            this.SplitDocumentAsync(docName, docxFile, xmlFile, null);
        }
        
        public void SplitDocumentAsync(string docName, byte[] docxFile, byte[] xmlFile, object userState) {
            if ((this.onBeginSplitDocumentDelegate == null)) {
                this.onBeginSplitDocumentDelegate = new BeginOperationDelegate(this.OnBeginSplitDocument);
            }
            if ((this.onEndSplitDocumentDelegate == null)) {
                this.onEndSplitDocumentDelegate = new EndOperationDelegate(this.OnEndSplitDocument);
            }
            if ((this.onSplitDocumentCompletedDelegate == null)) {
                this.onSplitDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSplitDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginSplitDocumentDelegate, new object[] {
                        docName,
                        docxFile,
                        xmlFile}, this.onEndSplitDocumentDelegate, this.onSplitDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap.BeginMergeDocument(DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMergeDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMergeDocument(string docName, System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> files, byte[] xmlFile, System.AsyncCallback callback, object asyncState) {
            DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequest inValue = new DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequest();
            inValue.Body = new DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequestBody();
            inValue.Body.docName = docName;
            inValue.Body.files = files;
            inValue.Body.xmlFile = xmlFile;
            return ((DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap)(this)).BeginMergeDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponse DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap.EndMergeDocument(System.IAsyncResult result) {
            return base.Channel.EndMergeDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private byte[] EndMergeDocument(System.IAsyncResult result) {
            DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponse retVal = ((DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap)(this)).EndMergeDocument(result);
            return retVal.Body.MergeDocumentResult;
        }
        
        private System.IAsyncResult OnBeginMergeDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string docName = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> files = ((System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles>)(inValues[1]));
            byte[] xmlFile = ((byte[])(inValues[2]));
            return this.BeginMergeDocument(docName, files, xmlFile, callback, asyncState);
        }
        
        private object[] OnEndMergeDocument(System.IAsyncResult result) {
            byte[] retVal = this.EndMergeDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMergeDocumentCompleted(object state) {
            if ((this.MergeDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MergeDocumentCompleted(this, new MergeDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MergeDocumentAsync(string docName, System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> files, byte[] xmlFile) {
            this.MergeDocumentAsync(docName, files, xmlFile, null);
        }
        
        public void MergeDocumentAsync(string docName, System.Collections.ObjectModel.ObservableCollection<DocumentTransitionPhoneApp.TransitionAppServices.PersonFiles> files, byte[] xmlFile, object userState) {
            if ((this.onBeginMergeDocumentDelegate == null)) {
                this.onBeginMergeDocumentDelegate = new BeginOperationDelegate(this.OnBeginMergeDocument);
            }
            if ((this.onEndMergeDocumentDelegate == null)) {
                this.onEndMergeDocumentDelegate = new EndOperationDelegate(this.OnEndMergeDocument);
            }
            if ((this.onMergeDocumentCompletedDelegate == null)) {
                this.onMergeDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMergeDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginMergeDocumentDelegate, new object[] {
                        docName,
                        files,
                        xmlFile}, this.onEndMergeDocumentDelegate, this.onMergeDocumentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap CreateChannel() {
            return new Service1SoapClientChannel(this);
        }
        
        private class Service1SoapClientChannel : ChannelBase<DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap>, DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap {
            
            public Service1SoapClientChannel(System.ServiceModel.ClientBase<DocumentTransitionPhoneApp.TransitionAppServices.Service1Soap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSplitDocument(DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SplitDocument", _args, callback, asyncState);
                return _result;
            }
            
            public DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponse EndSplitDocument(System.IAsyncResult result) {
                object[] _args = new object[0];
                DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponse _result = ((DocumentTransitionPhoneApp.TransitionAppServices.SplitDocumentResponse)(base.EndInvoke("SplitDocument", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMergeDocument(DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MergeDocument", _args, callback, asyncState);
                return _result;
            }
            
            public DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponse EndMergeDocument(System.IAsyncResult result) {
                object[] _args = new object[0];
                DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponse _result = ((DocumentTransitionPhoneApp.TransitionAppServices.MergeDocumentResponse)(base.EndInvoke("MergeDocument", _args, result)));
                return _result;
            }
        }
    }
}
