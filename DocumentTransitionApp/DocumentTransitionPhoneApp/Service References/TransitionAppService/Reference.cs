//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DocumentTransitionPhoneApp.TransitionAppService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransitionAppService.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SplitDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MarshalByRefObject))]
        System.IAsyncResult BeginSplitDocument(DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentRequest request, System.AsyncCallback callback, object asyncState);
        
        DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentResponse EndSplitDocument(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class Stream : MarshalByRefObject {
        
        private long positionField;
        
        private int readTimeoutField;
        
        private int writeTimeoutField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ReadTimeout {
            get {
                return this.readTimeoutField;
            }
            set {
                this.readTimeoutField = value;
                this.RaisePropertyChanged("ReadTimeout");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int WriteTimeout {
            get {
                return this.writeTimeoutField;
            }
            set {
                this.writeTimeoutField = value;
                this.RaisePropertyChanged("WriteTimeout");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Stream))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class MarshalByRefObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class KeyValuePairOfStringListOfStream : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Stream[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Stream[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SplitDocument", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SplitDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string docName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public DocumentTransitionPhoneApp.TransitionAppService.Stream docxFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public DocumentTransitionPhoneApp.TransitionAppService.Stream xmlFile;
        
        public SplitDocumentRequest() {
        }
        
        public SplitDocumentRequest(string docName, DocumentTransitionPhoneApp.TransitionAppService.Stream docxFile, DocumentTransitionPhoneApp.TransitionAppService.Stream xmlFile) {
            this.docName = docName;
            this.docxFile = docxFile;
            this.xmlFile = xmlFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SplitDocumentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SplitDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DocumentTransitionPhoneApp.TransitionAppService.KeyValuePairOfStringListOfStream[] SplitDocumentResult;
        
        public SplitDocumentResponse() {
        }
        
        public SplitDocumentResponse(DocumentTransitionPhoneApp.TransitionAppService.KeyValuePairOfStringListOfStream[] SplitDocumentResult) {
            this.SplitDocumentResult = SplitDocumentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : DocumentTransitionPhoneApp.TransitionAppService.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SplitDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SplitDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DocumentTransitionPhoneApp.TransitionAppService.KeyValuePairOfStringListOfStream[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DocumentTransitionPhoneApp.TransitionAppService.KeyValuePairOfStringListOfStream[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<DocumentTransitionPhoneApp.TransitionAppService.Service1Soap>, DocumentTransitionPhoneApp.TransitionAppService.Service1Soap {
        
        private BeginOperationDelegate onBeginSplitDocumentDelegate;
        
        private EndOperationDelegate onEndSplitDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onSplitDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SplitDocumentCompletedEventArgs> SplitDocumentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DocumentTransitionPhoneApp.TransitionAppService.Service1Soap.BeginSplitDocument(DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSplitDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSplitDocument(string docName, DocumentTransitionPhoneApp.TransitionAppService.Stream docxFile, DocumentTransitionPhoneApp.TransitionAppService.Stream xmlFile, System.AsyncCallback callback, object asyncState) {
            DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentRequest inValue = new DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentRequest();
            inValue.docName = docName;
            inValue.docxFile = docxFile;
            inValue.xmlFile = xmlFile;
            return ((DocumentTransitionPhoneApp.TransitionAppService.Service1Soap)(this)).BeginSplitDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentResponse DocumentTransitionPhoneApp.TransitionAppService.Service1Soap.EndSplitDocument(System.IAsyncResult result) {
            return base.Channel.EndSplitDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private DocumentTransitionPhoneApp.TransitionAppService.KeyValuePairOfStringListOfStream[] EndSplitDocument(System.IAsyncResult result) {
            DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentResponse retVal = ((DocumentTransitionPhoneApp.TransitionAppService.Service1Soap)(this)).EndSplitDocument(result);
            return retVal.SplitDocumentResult;
        }
        
        private System.IAsyncResult OnBeginSplitDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string docName = ((string)(inValues[0]));
            DocumentTransitionPhoneApp.TransitionAppService.Stream docxFile = ((DocumentTransitionPhoneApp.TransitionAppService.Stream)(inValues[1]));
            DocumentTransitionPhoneApp.TransitionAppService.Stream xmlFile = ((DocumentTransitionPhoneApp.TransitionAppService.Stream)(inValues[2]));
            return this.BeginSplitDocument(docName, docxFile, xmlFile, callback, asyncState);
        }
        
        private object[] OnEndSplitDocument(System.IAsyncResult result) {
            DocumentTransitionPhoneApp.TransitionAppService.KeyValuePairOfStringListOfStream[] retVal = this.EndSplitDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSplitDocumentCompleted(object state) {
            if ((this.SplitDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SplitDocumentCompleted(this, new SplitDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SplitDocumentAsync(string docName, DocumentTransitionPhoneApp.TransitionAppService.Stream docxFile, DocumentTransitionPhoneApp.TransitionAppService.Stream xmlFile) {
            this.SplitDocumentAsync(docName, docxFile, xmlFile, null);
        }
        
        public void SplitDocumentAsync(string docName, DocumentTransitionPhoneApp.TransitionAppService.Stream docxFile, DocumentTransitionPhoneApp.TransitionAppService.Stream xmlFile, object userState) {
            if ((this.onBeginSplitDocumentDelegate == null)) {
                this.onBeginSplitDocumentDelegate = new BeginOperationDelegate(this.OnBeginSplitDocument);
            }
            if ((this.onEndSplitDocumentDelegate == null)) {
                this.onEndSplitDocumentDelegate = new EndOperationDelegate(this.OnEndSplitDocument);
            }
            if ((this.onSplitDocumentCompletedDelegate == null)) {
                this.onSplitDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSplitDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginSplitDocumentDelegate, new object[] {
                        docName,
                        docxFile,
                        xmlFile}, this.onEndSplitDocumentDelegate, this.onSplitDocumentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DocumentTransitionPhoneApp.TransitionAppService.Service1Soap CreateChannel() {
            return new Service1SoapClientChannel(this);
        }
        
        private class Service1SoapClientChannel : ChannelBase<DocumentTransitionPhoneApp.TransitionAppService.Service1Soap>, DocumentTransitionPhoneApp.TransitionAppService.Service1Soap {
            
            public Service1SoapClientChannel(System.ServiceModel.ClientBase<DocumentTransitionPhoneApp.TransitionAppService.Service1Soap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSplitDocument(DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SplitDocument", _args, callback, asyncState);
                return _result;
            }
            
            public DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentResponse EndSplitDocument(System.IAsyncResult result) {
                object[] _args = new object[0];
                DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentResponse _result = ((DocumentTransitionPhoneApp.TransitionAppService.SplitDocumentResponse)(base.EndInvoke("SplitDocument", _args, result)));
                return _result;
            }
        }
    }
}
